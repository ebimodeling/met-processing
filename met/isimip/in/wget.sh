#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esg.pik-potsdam.de - 2014/05/08 00:08:09
# Search URL: http://esg.pik-potsdam.de/esg-search/wget/?query=*&dataset_id=isimip-ft.input.noresm-m.rcp26.day.prAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.prsnAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.psAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.rldsAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.rsdsAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.tasAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.tasmaxAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.tasminAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.uasAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.vasAdjust.v20130913|esg.pik-potsdam.de
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=https://esg.pik-potsdam.de/esgf-idp/openid/dlebauer
search_url='http://esg.pik-potsdam.de/esg-search/wget/?query=*&dataset_id=isimip-ft.input.noresm-m.rcp26.day.prAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.prsnAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.psAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.rldsAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.rsdsAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.tasAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.tasmaxAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.tasminAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.uasAdjust.v20130913|esg.pik-potsdam.de&dataset_id=isimip-ft.input.noresm-m.rcp26.day.vasAdjust.v20130913|esg.pik-potsdam.de'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'pr_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' 'bb565a4ba0f875552a0e8b46bc4b8959'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' '2f828281df770876806a938d1e81627c'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' 'e6f1a7b69b6879220b78e3df99cb3014'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' '05ba949c1cfd069b5a04771f88704cbb'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' '679931ec90a029c644fac700eac478cd'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' '20b85f920ce3de9b9a0f40bc67283897'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' '66460918f6f8ad970a1c803224aec084'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' '9555e17cb2e06823c27f8d6660049407'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' '9bd446d6600ea8e0ee5d5520552f18af'
'pr_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prAdjust/pr_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' 'abf5cd836a94c858314ad82a244b47f5'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' '8b23870563e1b61a016e600a7fed9836'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' '56551fb1bbedf6e97a02dba6415a839b'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' 'bc1f2196fd0d1f4155abdf42281cd4c2'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' '78c19f175335f7cfedde72e2b854d08f'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' '3be2d917642d61d64abe0b85ddf46f81'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' '4a7b4ce3ecacc4c831a51bbc81dc0ba1'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' '55c20386f14b4c3294b546078f458df3'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' '315a550311675fb49c7c04fd99ade0ba'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' '094c29d6e3d3e4a18a268357f25dda7c'
'prsn_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/prsnAdjust/prsn_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' '3b139cf27796531e7da5171ce8cce9b4'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' '3f0dda8a16dba9871b40ee83c3ceb6c9'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' '1649778af5cc2227a42dc8436e0d491c'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' '61bbcfbb0c3c4b72b7129debea51f48c'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' '0a6eeb941e1f791a1e18924fba1e8715'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' 'ac36391dfaf0435ec954c183ac65d9fa'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' '6912fc762c4eaec2f854d3da194ed35e'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' '6668a4bd83f92b4eefaeac71a545a23e'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' '5c360db73bccf78f0bce9e2ba73b2334'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' '335ed5ec7d13ec2ba8a79e0422fbfbbd'
'ps_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/psAdjust/ps_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' '4d979171c4e00900c8e5e6345da64f11'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' '327667e3e3fc0368efa0c072557c6796'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' 'cfc7aab2da08a018a89c2635f26440dd'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' '39310b564f992434d656b255dfde3497'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' 'bce70fc8eb0cb467075f0d2f7eadc0a5'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' 'de9525284c4cc867b92afbb03af21d53'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' '9cb4ee497d9652c7a8b3deeccb990554'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' 'de6dec7f69b7e6f074ccb7fa282a080d'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' '8261b7bf3a1d05b9093a51fdfbdd8691'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' '32aa96f1779b803e300b2010c69eea04'
'rlds_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rldsAdjust/rlds_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' 'd6f16ee6c32c64032d281af74e6136b2'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' 'be62820f1c74b9cb24eb2ff005dfbc59'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' '8b59a2f75def8a0461fb2ab1fdbbf4de'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' '810ca1716f58cd977f9a4a2298723639'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' '86ae96c1f2add1344923bda9f666687f'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' '034a402515a7634b1bd283da13c62459'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' 'b0bf19d52825b00478b66d581da8e45b'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' 'c9130e2926884b72423e5b8b576f54e0'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' 'b22be9c80cbc3f81e3da9d5360acc097'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' '21e44175e56c953c3b34559f9a08902c'
'rsds_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/rsdsAdjust/rsds_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' 'c0895e26aaa769a4163ebfc40b00d9d1'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' '2db9955017a9566ce855f42d26e71a83'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' '971e4603c913ab0b886b21fcec864d78'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' '241fd93c1e52a684bd7988af12502f12'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' '4cc99a3f350e1394f0ff1ace97a8d1e8'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' 'b2d65440414a01c7e77ed94ba4319269'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' 'd65c94cf2d03c592877dbcd74321ad1b'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' 'b1889657463acca0c005a0c743c657f4'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' '7d7febaea02e35eff72a936c704e371e'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' '21b0b29bbb42dd0b3cb9246b508d5638'
'tas_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasAdjust/tas_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' '7ae301829ddac96efd499320f0ac3d63'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' '6f000b16a46fb1d5464ba670d20c0917'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' '4221724b69b3954309609af296e7e204'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' 'cc84cc1adf4bf315b84610aa6a9be74a'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' 'd99d8cd92542b382818205fe12c49c10'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' '976bd9e0cb34299352a3bc6ba9e60430'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' 'de6666c4214702219448b43637aea269'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' '0defe1a6800264c97ab4ce7256ef430b'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' '02b5c3e3fb5879555f21023246f12a17'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' 'b068731721fca5d609ba90dc65d80dd1'
'tasmax_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasmaxAdjust/tasmax_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' 'ab51c0acbef94523cac58aefa5f9aef2'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' 'a632d142441c0184d7b9586490fe3757'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' 'f0dd5938e91f31f6e8aa5fa7756e14af'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' '4d995c0cfe83e5ab27dce5d471cf8858'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' 'bb181b23ede5fdb76964cd990966fa81'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' '36669cc8337e11e7d54ff393eabdc676'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' '81062845e9e6016eb67d967c4ac61714'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' '6e922ce17567d6843fd1df61e325e6e2'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' 'd49db509008ec37d838bbda778e40b63'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' '53651d560b0a9c2f2e5ebdeb140e7a42'
'tasmin_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/tasminAdjust/tasmin_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' '5537a335bd77fcae3a8e0df3d8a42418'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' '7d642688f9f9d44868faac790d57fa4d'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' '5d94451d3f00317fb4aeaac1fe267cee'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' '20ba0f2433e37596f680f4fe5340686a'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' 'f6895aa4f0b2bcf0cfbf301291025f7c'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' '0dea67eb37401a3f6b439df9f3a076f6'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' 'ec040b5a885ec30bc9f1833dad1a9926'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' 'f3772fba24e3ac91be3096a787193d1d'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' '205565095a0223601c57a4212d3c7298'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' '050442df5b25b3e29de650d8f6eed14c'
'uas_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/uasAdjust/uas_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' '13e185070eaf10ebbdf099ae38e06784'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2091-2099.nc' 'MD5' '3d11eefe9b6a727c39f603b40130c59b'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2081-2090.nc' 'MD5' '3cc17794be02f20495a6e5c76bddcbb2'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2071-2080.nc' 'MD5' 'f71e5393132c31d9cc53a23ad9b934e5'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2061-2070.nc' 'MD5' '31d686d54269076dc5c8d99f96f2c1ab'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2051-2060.nc' 'MD5' '5da271fb3771feceb4f9c3049f817874'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2041-2050.nc' 'MD5' 'b499c823ef8ead7318a6cdab4455198d'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2031-2040.nc' 'MD5' 'ffcebe8c46847e0014f8f236108236ee'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2021-2030.nc' 'MD5' '5f518fd26f4047aa112f722eff7b3db0'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2011-2020.nc' 'MD5' 'd9b4e41db9b4dc19849e44e60793d110'
'vas_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/noresm-m/rcp2p6/daily/vasAdjust/vas_bced_1960_1999_noresm1-m_rcp2p6_2006-2010.nc' 'MD5' 'f63238eae26c22204233c737a5c05707'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
TRUSTSTORE=$ESG_HOME/esg-truststore.ts
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqh' OPT; do
    case $OPT in
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        p) clean_work=0;;               #       : preserve data that failed checksum
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day)
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1;;            #       : completely skip security. It will only work if the accessd data is not secured at all.
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java is required for retrieving the certificate and couldn't be found."
        exit 1
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if ((mVer<5)); then
        echo "Java version 1.5+ is required for retrieving the certificate." >&2
        echo "Current version seems older: $(java -version | head -n1) " >&2  
        exit 1
    fi
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from rainbow
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2
    
    if ! wget https://rainbow.llnl.gov/dist/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget https://rainbow.llnl.gov/dist/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

#get truststore from rainbow
get_truststore() {
    # don't if this was already done today
    [[ -z $force && "$(find $TRUSTSTORE -type f -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Truststore..." >&2
    
    if ! wget https://rainbow.llnl.gov/dist/certs/esg-truststore.ts -O $TRUSTSTORE -q ; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget https://rainbow.llnl.gov/dist/certs/esg-truststore.ts -O $TRUSTSTORE
        echo "Could't update truststore!" >&2
        return 1
    else
        touch $TRUSTSTORE
    fi
    
    echo "done!" >&2    
}

# Retrieve ESG credentials
unset pass
get_credentials() {
    check_java
    #get all certificates
    get_certificates
    #get truststore 
    get_truststore
    
    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q https://rainbow.llnl.gov/dist/devel/esgf-getcert/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    
    #get password
    pass=
    [[ ! "$pass" ]] && read -sp "MyProxy Password? " pass


    local args=
    [[ "$openId" ]] && args=$args" --oid $openId"
    [[ "$pass" ]] && args=$args" -P $pass"
    [[ "$username" ]] && args=$args" -l $username"
    
    echo -n $'\nRetrieving Credentials...' >&2
    if ! java $(proxy_to_java) -Djavax.net.ssl.trustStore=$TRUSTSTORE -Djavax.net.ssl.trustStorePassword=changeit -jar $MYPROXY_GETCERT $args --output $ESG_CREDENTIALS ; then        
        echo "Certificate could not be retrieved"
        exit 1
    fi
    echo "done!" >&2
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

get_mod_time_() {
    if ((LINUX)); then
        #on linux modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    elif ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                $wget -O "$file" $url || { failed=1; break; }
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

#
# MAIN
#
echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 100 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials
#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_
echo "done"
