#!/bin/bash

##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esg.pik-potsdam.de - 2014/05/08 20:12:18
# Search URL: http://esg.pik-potsdam.de/esg-search/wget/?query=*&dataset_id=isimip-ft.input.gfdl-esm2m.historical.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.gfdl-esm2m.rcp26.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.gfdl-esm2m.rcp45.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.gfdl-esm2m.rcp60.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.gfdl-esm2m.rcp85.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.historical.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.rcp26.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.rcp45.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.rcp60.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.rcp85.day.hurs.v20140208|esg.pik-potsdam.de
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=https://esg.pik-potsdam.de/esgf-idp/openid/dlebauer
search_url='http://esg.pik-potsdam.de/esg-search/wget/?query=*&dataset_id=isimip-ft.input.gfdl-esm2m.historical.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.gfdl-esm2m.rcp26.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.gfdl-esm2m.rcp45.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.gfdl-esm2m.rcp60.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.gfdl-esm2m.rcp85.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.historical.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.rcp26.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.rcp45.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.rcp60.day.hurs.v20140208|esg.pik-potsdam.de&dataset_id=isimip-ft.input.hadgem2-es.rcp85.day.hurs.v20140208|esg.pik-potsdam.de'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'hurs_gfdl-esm2m_hist_2001-2005.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/historical/daily/hurs/hurs_gfdl-esm2m_hist_2001-2005.nc' 'MD5' 'f0d429790a1717a73331b79821ad3584'
'hurs_gfdl-esm2m_hist_1991-2000.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/historical/daily/hurs/hurs_gfdl-esm2m_hist_1991-2000.nc' 'MD5' '2d4d66812bce2d4c2fa96cea6b407cc0'
'hurs_gfdl-esm2m_hist_1981-1990.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/historical/daily/hurs/hurs_gfdl-esm2m_hist_1981-1990.nc' 'MD5' '4bd0d971f57f4f1b360506e844dd3ff8'
'hurs_gfdl-esm2m_hist_1971-1980.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/historical/daily/hurs/hurs_gfdl-esm2m_hist_1971-1980.nc' 'MD5' '1541f80ee3a638ff5a70f9435e2f3374'
'hurs_gfdl-esm2m_hist_1961-1970.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/historical/daily/hurs/hurs_gfdl-esm2m_hist_1961-1970.nc' 'MD5' '409b3eb4d5714aa91126bbaf592213ae'
'hurs_gfdl-esm2m_hist_1951-1960.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/historical/daily/hurs/hurs_gfdl-esm2m_hist_1951-1960.nc' 'MD5' 'c935779f051498509d6af88f72732428'
'hurs_gfdl-esm2m_hist_1950.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/historical/daily/hurs/hurs_gfdl-esm2m_hist_1950.nc' 'MD5' 'd26f13dc70fe0189395cf8b2fdae6fb5'
'hurs_gfdl-esm2m_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2091-2099.nc' 'MD5' 'df1849b87c2abd3789cebcd23856712b'
'hurs_gfdl-esm2m_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2081-2090.nc' 'MD5' 'd20dc2c835eb9d86747427e1cf3b3c59'
'hurs_gfdl-esm2m_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2071-2080.nc' 'MD5' 'c0e24b5a28874921ad45ee161e825d50'
'hurs_gfdl-esm2m_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2061-2070.nc' 'MD5' '0f7a37e91d3c2f6231f6069b88da82e6'
'hurs_gfdl-esm2m_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2051-2060.nc' 'MD5' '716b79552d2574d1c9f76ce30de21bc3'
'hurs_gfdl-esm2m_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2041-2050.nc' 'MD5' 'fc9a67a1203bde1c73c62b1036f919bc'
'hurs_gfdl-esm2m_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2031-2040.nc' 'MD5' 'cedd5f90cb1c8e2bb288a35d7fe6dc11'
'hurs_gfdl-esm2m_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2021-2030.nc' 'MD5' 'db28c1dde479efa3b3df0314bcbd9562'
'hurs_gfdl-esm2m_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2011-2020.nc' 'MD5' '08e05eb9787a5d6a123d75fa91f9606b'
'hurs_gfdl-esm2m_rcp2p6_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp2p6/daily/hurs/hurs_gfdl-esm2m_rcp2p6_2006-2010.nc' 'MD5' '4058ebd2944b0759e707e9f1f90ed8e5'
'hurs_gfdl-esm2m_rcp4p5_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2091-2099.nc' 'MD5' '3bf0aef8bb53a8a48d990bc1b3ecc0a2'
'hurs_gfdl-esm2m_rcp4p5_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2081-2090.nc' 'MD5' 'c11a9a6cf197a79ade241c6fdd1103f8'
'hurs_gfdl-esm2m_rcp4p5_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2071-2080.nc' 'MD5' '8a893ac16a7a161691dd904d0cf54f5b'
'hurs_gfdl-esm2m_rcp4p5_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2061-2070.nc' 'MD5' '8bd219f3ab0449b52edc9543db1a8373'
'hurs_gfdl-esm2m_rcp4p5_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2051-2060.nc' 'MD5' 'f265ae239c01235c33b1d88eb0de03ab'
'hurs_gfdl-esm2m_rcp4p5_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2041-2050.nc' 'MD5' 'a903f40f1bc85325ae8eafb502a3b83c'
'hurs_gfdl-esm2m_rcp4p5_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2031-2040.nc' 'MD5' '15c0cb5d966195384e01bb4840f3e1da'
'hurs_gfdl-esm2m_rcp4p5_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2021-2030.nc' 'MD5' '7c605750940ac94164ec15aa2cd6c000'
'hurs_gfdl-esm2m_rcp4p5_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2011-2020.nc' 'MD5' '77f8e2967d4c9b704bd9163e5264337a'
'hurs_gfdl-esm2m_rcp4p5_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp4p5/daily/hurs/hurs_gfdl-esm2m_rcp4p5_2006-2010.nc' 'MD5' 'e834505cd9935eddc9f1c21bcd85b9f2'
'hurs_gfdl-esm2m_rcp6p0_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2091-2099.nc' 'MD5' 'e52f723b1b1beb26ae804574b0cfbf5c'
'hurs_gfdl-esm2m_rcp6p0_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2081-2090.nc' 'MD5' '673300ad1cd1971dba196555cd21e1ee'
'hurs_gfdl-esm2m_rcp6p0_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2071-2080.nc' 'MD5' '9b1ecf6b28c1d73b4b6a3f2b5b85759e'
'hurs_gfdl-esm2m_rcp6p0_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2061-2070.nc' 'MD5' '1853109c189807c8ef796707fe6cd946'
'hurs_gfdl-esm2m_rcp6p0_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2051-2060.nc' 'MD5' 'd3fd4ac7ebd912d563c6eb585b3d46fd'
'hurs_gfdl-esm2m_rcp6p0_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2041-2050.nc' 'MD5' '0a6ab395cafe3c35a7f3b4612b225a91'
'hurs_gfdl-esm2m_rcp6p0_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2031-2040.nc' 'MD5' '21edc9682e9b178565638f47b2ab4005'
'hurs_gfdl-esm2m_rcp6p0_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2021-2030.nc' 'MD5' '229c4a7fef1aa75911c1e2345f704951'
'hurs_gfdl-esm2m_rcp6p0_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2011-2020.nc' 'MD5' 'ef61ec7424b403e558267c2c07e4b750'
'hurs_gfdl-esm2m_rcp6p0_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp6p0/daily/hurs/hurs_gfdl-esm2m_rcp6p0_2006-2010.nc' 'MD5' '2ddd84c3d54bc95ac6df944b978975e7'
'hurs_gfdl-esm2m_rcp8p5_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2091-2099.nc' 'MD5' 'cb890559918317de3af41d9568cce34a'
'hurs_gfdl-esm2m_rcp8p5_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2081-2090.nc' 'MD5' '388db8e87fee0c999ebbb8d61566a4a4'
'hurs_gfdl-esm2m_rcp8p5_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2071-2080.nc' 'MD5' '989686a9b489643101c9ccc84ce54dd9'
'hurs_gfdl-esm2m_rcp8p5_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2061-2070.nc' 'MD5' '05d1bd531df1cee164eb690be108d901'
'hurs_gfdl-esm2m_rcp8p5_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2051-2060.nc' 'MD5' 'ca83aa9ec171702601e551fe3124ff6b'
'hurs_gfdl-esm2m_rcp8p5_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2041-2050.nc' 'MD5' 'f5dd608fa824da3083d535369bc1e681'
'hurs_gfdl-esm2m_rcp8p5_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2031-2040.nc' 'MD5' 'ad01d198d01cd89adb6996146bc8cca9'
'hurs_gfdl-esm2m_rcp8p5_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2021-2030.nc' 'MD5' '1d6e37a9e049ee2dadf64b462ee53492'
'hurs_gfdl-esm2m_rcp8p5_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2011-2020.nc' 'MD5' '26887096760b3ad80aadfe0160c62dc2'
'hurs_gfdl-esm2m_rcp8p5_2006-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/gfdl-esm2m/rcp8p5/daily/hurs/hurs_gfdl-esm2m_rcp8p5_2006-2010.nc' 'MD5' 'fd952b268e53478790fbd5111c2b5bd2'
'hurs_hadgem2-es_hist_2001-2004.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/historical/daily/hurs/hurs_hadgem2-es_hist_2001-2004.nc' 'MD5' 'f7e2703b89717de4f739fd77fb4e8c61'
'hurs_hadgem2-es_hist_1991-2000.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/historical/daily/hurs/hurs_hadgem2-es_hist_1991-2000.nc' 'MD5' 'eec6c084485d38f47f9fe5200bf1e859'
'hurs_hadgem2-es_hist_1981-1990.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/historical/daily/hurs/hurs_hadgem2-es_hist_1981-1990.nc' 'MD5' '74f8a0daf9ede64f70648cd835204b22'
'hurs_hadgem2-es_hist_1971-1980.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/historical/daily/hurs/hurs_hadgem2-es_hist_1971-1980.nc' 'MD5' 'efc22fef136e85b7ee25569d054b2ece'
'hurs_hadgem2-es_hist_1961-1970.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/historical/daily/hurs/hurs_hadgem2-es_hist_1961-1970.nc' 'MD5' '8b0f417844464c86983c701906650f0e'
'hurs_hadgem2-es_hist_1951-1960.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/historical/daily/hurs/hurs_hadgem2-es_hist_1951-1960.nc' 'MD5' 'bb08f1799cb31b03aed600d0dc989710'
'hurs_hadgem2-es_hist_1950.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/historical/daily/hurs/hurs_hadgem2-es_hist_1950.nc' 'MD5' '2a503afc30d0a7898bd9c7df033b1550'
'hurs_hadgem2-es_rcp2p6_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2091-2099.nc' 'MD5' '2c74c3aa9810a7ff9e71fc0ffae521c1'
'hurs_hadgem2-es_rcp2p6_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2081-2090.nc' 'MD5' '68f1173958743e71d95412f41e833379'
'hurs_hadgem2-es_rcp2p6_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2071-2080.nc' 'MD5' '63da8427f29f9c8512a0d0ec259a5c8e'
'hurs_hadgem2-es_rcp2p6_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2061-2070.nc' 'MD5' '2cc98af8ab75309bd256cff98ca93e69'
'hurs_hadgem2-es_rcp2p6_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2051-2060.nc' 'MD5' 'badb88287572f2ee5e1b5f387c4905c8'
'hurs_hadgem2-es_rcp2p6_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2041-2050.nc' 'MD5' 'dcec528e38600a26f055741a91dc2f99'
'hurs_hadgem2-es_rcp2p6_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2031-2040.nc' 'MD5' 'd59a84c6d0e73e161fdbf59ffa39c00c'
'hurs_hadgem2-es_rcp2p6_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2021-2030.nc' 'MD5' 'a10637c2c3dd8951f1a0f81550b2e15f'
'hurs_hadgem2-es_rcp2p6_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2011-2020.nc' 'MD5' '1aafea2b3d36a3b28e89d44b6ac8a8a2'
'hurs_hadgem2-es_rcp2p6_2005-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp2p6/daily/hurs/hurs_hadgem2-es_rcp2p6_2005-2010.nc' 'MD5' '18084be0fd3716ed5322573b3baa20bd'
'hurs_hadgem2-es_rcp4p5_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2091-2099.nc' 'MD5' 'b0bad04d637911ea3ef35b2dfcc30289'
'hurs_hadgem2-es_rcp4p5_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2081-2090.nc' 'MD5' 'fb96c25bba53216dcded751c4532ed33'
'hurs_hadgem2-es_rcp4p5_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2071-2080.nc' 'MD5' '96818c8a044e24e915852c328f404715'
'hurs_hadgem2-es_rcp4p5_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2061-2070.nc' 'MD5' '535da57d69d3f965c88c9a5c0986d412'
'hurs_hadgem2-es_rcp4p5_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2051-2060.nc' 'MD5' '5939949d1699466aa7a5ac4c8cc70ba0'
'hurs_hadgem2-es_rcp4p5_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2041-2050.nc' 'MD5' '1f3731c8c8c72546cbae2b4829c45d87'
'hurs_hadgem2-es_rcp4p5_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2031-2040.nc' 'MD5' 'd382d97be9d4611bd528d7896fb42b57'
'hurs_hadgem2-es_rcp4p5_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2021-2030.nc' 'MD5' 'b751a7cc4ec18975ca33f5144a444412'
'hurs_hadgem2-es_rcp4p5_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2011-2020.nc' 'MD5' 'c1715dae84b9656f0b51313d65e0df8d'
'hurs_hadgem2-es_rcp4p5_2005-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp4p5/daily/hurs/hurs_hadgem2-es_rcp4p5_2005-2010.nc' 'MD5' '3bef8ede860f4bf566f6e2acf7951a9b'
'hurs_hadgem2-es_rcp6p0_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2091-2099.nc' 'MD5' '0b3e70adef7f4820e7525b6704737a90'
'hurs_hadgem2-es_rcp6p0_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2081-2090.nc' 'MD5' '21492fe2d6350c346aa0f1bb218f44af'
'hurs_hadgem2-es_rcp6p0_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2071-2080.nc' 'MD5' '7b1e7e08d2737753ed998ed4c523fc18'
'hurs_hadgem2-es_rcp6p0_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2061-2070.nc' 'MD5' '8d1b9dedd8a1c01e48a42a3f1bb3e18c'
'hurs_hadgem2-es_rcp6p0_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2051-2060.nc' 'MD5' 'b268f2df6e75651e33f2feb42b96a871'
'hurs_hadgem2-es_rcp6p0_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2041-2050.nc' 'MD5' '6df4533bb0a3a0c868ec086e15c698da'
'hurs_hadgem2-es_rcp6p0_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2031-2040.nc' 'MD5' '079a2b31e56b48e179eb23e843742e72'
'hurs_hadgem2-es_rcp6p0_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2021-2030.nc' 'MD5' '435d438c61d3d809ff1532d39c04f690'
'hurs_hadgem2-es_rcp6p0_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2011-2020.nc' 'MD5' 'a510e1b33bd4082ac81990f6396c8d0e'
'hurs_hadgem2-es_rcp6p0_2005-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp6p0/daily/hurs/hurs_hadgem2-es_rcp6p0_2005-2010.nc' 'MD5' '2e3b0c1209e76a2319f1175d9e26ebc5'
'hurs_hadgem2-es_rcp8p5_2091-2099.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2091-2099.nc' 'MD5' '6cb0a50feea4f16f2d82cdce905fdd4b'
'hurs_hadgem2-es_rcp8p5_2081-2090.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2081-2090.nc' 'MD5' '8adb9fb7f5fd5932a0c8b9533ad0e496'
'hurs_hadgem2-es_rcp8p5_2071-2080.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2071-2080.nc' 'MD5' '3ca986b7a6e569760207b15d5a90b69a'
'hurs_hadgem2-es_rcp8p5_2061-2070.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2061-2070.nc' 'MD5' '77261529a7b8cf19266b694874587118'
'hurs_hadgem2-es_rcp8p5_2051-2060.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2051-2060.nc' 'MD5' '1cc13a10cbc39a7b271695483a67c51f'
'hurs_hadgem2-es_rcp8p5_2041-2050.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2041-2050.nc' 'MD5' 'a87875055c2a3da4acc84c2c2a62a2a7'
'hurs_hadgem2-es_rcp8p5_2031-2040.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2031-2040.nc' 'MD5' '97b2b5277931fe0d7d01daba8afbf91f'
'hurs_hadgem2-es_rcp8p5_2021-2030.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2021-2030.nc' 'MD5' 'c7f610e61c12343bc2948d70e0341c2a'
'hurs_hadgem2-es_rcp8p5_2011-2020.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2011-2020.nc' 'MD5' '473c2f8491c2bb47a93d575e430fcc35'
'hurs_hadgem2-es_rcp8p5_2005-2010.nc' 'http://esg.pik-potsdam.de/thredds/fileServer/isimip_dataroot/isimip-ft/input/hadgem2-es/rcp8p5/daily/hurs/hurs_hadgem2-es_rcp8p5_2005-2010.nc' 'MD5' '64a13e1097268d56dc526c658812d49d'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
TRUSTSTORE=$ESG_HOME/esg-truststore.ts
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqh' OPT; do
    case $OPT in
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        p) clean_work=0;;               #       : preserve data that failed checksum
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day)
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1;;            #       : completely skip security. It will only work if the accessd data is not secured at all.
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java is required for retrieving the certificate and couldn't be found."
        exit 1
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if ((mVer<5)); then
        echo "Java version 1.5+ is required for retrieving the certificate." >&2
        echo "Current version seems older: $(java -version | head -n1) " >&2  
        exit 1
    fi
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from rainbow
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2
    
    if ! wget https://rainbow.llnl.gov/dist/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget https://rainbow.llnl.gov/dist/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

#get truststore from rainbow
get_truststore() {
    # don't if this was already done today
    [[ -z $force && "$(find $TRUSTSTORE -type f -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Truststore..." >&2
    
    if ! wget https://rainbow.llnl.gov/dist/certs/esg-truststore.ts -O $TRUSTSTORE -q ; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget https://rainbow.llnl.gov/dist/certs/esg-truststore.ts -O $TRUSTSTORE
        echo "Could't update truststore!" >&2
        return 1
    else
        touch $TRUSTSTORE
    fi
    
    echo "done!" >&2    
}

# Retrieve ESG credentials
unset pass
get_credentials() {
    check_java
    #get all certificates
    get_certificates
    #get truststore 
    get_truststore
    
    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q https://rainbow.llnl.gov/dist/devel/esgf-getcert/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    
    #get password
    pass=
    [[ ! "$pass" ]] && read -sp "MyProxy Password? " pass


    local args=
    [[ "$openId" ]] && args=$args" --oid $openId"
    [[ "$pass" ]] && args=$args" -P $pass"
    [[ "$username" ]] && args=$args" -l $username"
    
    echo -n $'\nRetrieving Credentials...' >&2
    if ! java $(proxy_to_java) -Djavax.net.ssl.trustStore=$TRUSTSTORE -Djavax.net.ssl.trustStorePassword=changeit -jar $MYPROXY_GETCERT $args --output $ESG_CREDENTIALS ; then        
        echo "Certificate could not be retrieved"
        exit 1
    fi
    echo "done!" >&2
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

get_mod_time_() {
    if ((LINUX)); then
        #on linux modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    elif ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                $wget -O "$file" $url || { failed=1; break; }
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

#
# MAIN
#
echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 94 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials
#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_
echo "done"
