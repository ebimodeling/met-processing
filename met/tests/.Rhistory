result[1:10, qair2rh(qair = qair, temp = tair, press = ud.convert(press, "mbar", "bar"))]
result[1:10, qair2rh(qair = qair, temp = tair, press = ud.convert(press, "millibar", "bar"))]
result[1:10, qair2rh(qair = qair, temp = tair, press = ud.convert(press, "kPa", "Pa"))]
result[,ud.convert(press, "Pa", "kPa")]
result[,ud.convert(press, "Pa", "mPa")]
result[,ud.convert(press, "Pa", "Pa")]
result[,ud.convert(press, "kPa", "Pa")]
result[,ud.convert(press, "Pa", "kPa")]
result[,ud.convert(press, "bar", "mbar")]
result[,press/1000]
result[,press]
result[,press/100]
result[,ud.convert(press, "hPa", "kPa")]
result[,ud.convert(press, "hPa", "Pa")]
result[,ud.convert(press, "hPa", "kPa")]
result[,ud.convert(press, "Pa", "kPa")]
result[,ud.convert(press, "Pa", "mb")]
result[,ud.convert(press, "Pa", "mbar")]
ud.convert(1, "C", "K")
ud.convert(1, "celsius", "K")
ud.convert(1, "c", "K")
Idirdif
light$Itot
Idirdif
head(Idirdif)
plot(Idirdif$Id)
plot(Idirdif[,"Id"])
lines(light$Itot)
plot(Idirdif[,"Id"], type = "l")
lines(light$Itot)
plot(Idirdif[,"Id"], type = "l")
lines(light$Idiff)
plot(Idirdif[,"Id"], light$Idiff)
plot(Idirdif[,"Id"], light$Idir)
plot(light$Idir)
light
light$I.dir
plot(light$I.dir)
plot(Idirdif[,"Id"])
plot(Idirdif[1:1000,"Id"])
plot(Idirdif[1:1000,"Id"], type = "l")
plot(Idirdif[1:100,"Id"], type = "l")
lines(light$I.dir)
lines(light$I.totl)
lines(light$I.tot)
plot(light$I.tot)
plot(light$I.dir)
plot(light$I.dir[1:100])
line(Idirdif$In)
line(Idirdif[1:100,"In"])
lines(Idirdif[1:100,"In"])
IdirDif
Idirdif
plot(resC2)
cruncepsolar
cruncepsolar
@ggplot() + geom_line(data = allsolar[1:100, aes(date, 
allsolar
allsolar[1:100, list(plot(obs), lines(cruncep))]
allsolar[100:200, list(plot(obs), lines(cruncep))]
allsolar[200:300, list(plot(obs), lines(cruncep))]
allsolar[200:3000, list(plot(obs), lines(cruncep))]
allsolar[200:3000, list(range(obs), range(cruncep))]
allsolar[200:3000, list(mean(obs), mean(cruncep))]
allsolar[200:3000, list(sd(obs), sd(cruncep))]
allsolar[200:300, list(plot(obs), lines(cruncep))]
allsolar[200:800, list(plot(obs), lines(cruncep))]
allsolar[200:800, list(plot(obs), lines(cruncep$resC2))]
resC2
allsolar[200:800, list(plot(obs), lines(cruncep*resC2))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[226:4006))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[226:406]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[221:401]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[201:401]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[205:405]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[203:403]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[204:404]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[207:407]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[206:406]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[208:408]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[209:409]))]
allsolar[200:400, list(plot(obs), lines(cruncep))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[209:409]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[210:410]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[211:411]))]
allsolar
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-6]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-5]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-11]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-12]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-13]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-11]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-12]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-16]))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-6]))]
allsolar[200:400, list(plot(obs), points(cruncep*resC2[200:400-6]))]
allsolar[200:400, list(plot(obs), points(cruncep*resC2[200:400]))]
allsolar[200:400, list(plot(obs), points(cruncep*resC2[200:400-6]))]
allsolar[200:400, list(plot(obs), points(cruncep*resC2[200:400]))]
allsolar[200:400, list(plot(obs), points(cruncep*resC2[200:400+6]))]
allsolar[200:400, list(plot(obs), points(cruncep*resC2[200:400+6], col = "red"))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400+6], col = "red"))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400+5], col = "red"))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400+6], col = "red"))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400-6], col = "red"))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400], col = "red"))]
allsolar[200:400, list(plot(obs), lines(cruncep*resC2[200:400], col = "red"))]
allsolar[200:400, list(plot(date, obs), lines(date, cruncep*resC2[200:400], col = "red"))]
allsolar[200:300, list(plot(date, obs), lines(date, cruncep*resC2[200:300], col = "red"))]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250], col = "red"))]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250-6], col = "red"))]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250-8], col = "red"))]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250-12], col = "red"))]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250-13], col = "red"))]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250-15], col = "red"))]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250-14], col = "red"))]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250-14], col = "red"),) lines(date, cruncep, col = "blue")]
allsolar[200:250, list(plot(date, obs), lines(date, cruncep*resC2[200:250-14], col = "red"), lines(date, cruncep, col = "blue"))]
allsolar[500:550, list(plot(date, obs), lines(date, cruncep*resC2[500:550-14], col = "red"), lines(date, cruncep, col = "blue"))]
allsolar[500:550, list(plot(date, obs), lines(date, cruncep, col = "blue"))]
met
allsolar
allsolar[500:550, list(plot(date, obs))]
allsolar[ list(plot(date, obs))]
allsolar[ ,list(plot(date, obs))]
allsolar[ ,list(plot(cruncep, obs))]
dim(resC2)
length(resC2)
dim(result
)
hourly.result
dim(hourly.result)
length(hourly.result)
names(hourly.result)
hourly.result$swdown
c
resC2
light
resC2
plot(resC2$resC2)
plot(resC2$resC2[1:100], type = "l")
plot(resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100])
plot(allsolar$cruncep*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100])
plot(hourly.result$ppfd*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100])
plot(hourly.result$ppfd[1:100]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100])
plot(hourly.result$ppfd[1:100]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], color = "red")
plot(hourly.result$ppfd[1:100]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1:100+6], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1:100+6]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1:100]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1:100+4]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1:100+3]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1:100+2]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1:100-1]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[1-:110-1]*resC2$resC2[1:100], type = "l"); lines(allsolar$obs[1:100], col = "red")
plot(hourly.result$ppfd[10:110-1]*resC2$resC2[10:110], type = "l"); lines(allsolar$obs[10:110], col = "red")
plot(hourly.result$ppfd[10:110+1]*resC2$resC2[10:110], type = "l"); lines(allsolar$obs[10:110], col = "red")
plot(hourly.result$ppfd[10:110+5]*resC2$resC2[10:110], type = "l"); lines(allsolar$obs[10:110], col = "red")
plot(hourly.result$ppfd[10:110+6]*resC2$resC2[10:110], type = "l"); lines(allsolar$obs[10:110], col = "red")
plot(hourly.result$ppfd[10:210+6]*resC2$resC2[10:210], type = "l"); lines(allsolar$obs[10:210], col = "red")
resC2*resC2
cruncepsolar
solar
rh
precip
summary(met)
met[,sum(precip), by = source]
met[,sum(RH), by = source]
met[,mean(RH), by = source]
met[,mean(precip), by = source]
met[,mean(temp), by = source]
met[,range(temp), by = source]
maxsolar
)
install.packages("GGally")
?ggpairs
)
allsolar
c
allsolar
c
x
c
c
q()
n
lat
"
time.idx
attributes(time.idx)
ncatt_get(met.nc)
time <- ncatt_get(met.nc, "time")
attributes(time)
time$units
time$bounds
time$calendar
time$long_name
floor(time.idx)
class(time.idx)
names(time.idx)
floor(as.vector(time.idx))
floor(as.vector(time.idx[,1))
floor(as.vector(time.idx[,1]))
dim((time.idx))
min((time.idx))
?floor
floor((time.idx))
days(floor((time.idx[1])))
x <- time.idx[1]
ymd("1700-01-01") + days(floor(x))
ymd("1700-01-01") + days(floor(x)) + hours(24*time.idx-floor(time.idx))
ymd("1700-01-01") + days(floor(x)) + hours(24*x-floor(x))
ymd("1700-01-01") + days(floor(x)) #+ hours(24*x-floor(x))
x-floor(x)
24*(x-floor(x))
range(time.idx - floor(time.idx))
range(24/(time.idx - floor(time.idx)))
range(24*(time.idx - floor(time.idx)))
ymd("1700-01-01") + days(floor(x)) + hours(24*(x-floor(x)))
ymd("1700-01-01") + days(floor(x)) + hours(1.5)
ymd("1700-01-01") + days(floor(x)) + hours(1)
ymd("1700-01-01") + days(floor(x)) + minutes(1)
ymd("1700-01-01") + days(floor(x)) + minutes(1.5)
head(all.dates)
attributes(met.nc)
attributes(met.nc)$var
met.nc$var
met.nc$dim
met.nc$groups
met.nc$id
met.nc$format
met.nc$fqgn2Rindex
met.nc$ndims
ncatt_get(met.nc, "foo")
attributes(met.nc)
attributes(met.nc$var)
met.nc$var$names
attributes(met.nc$var)$names
dim.order[1:10]
attributes(met.nc$var)
met.nc$var[["wind"]]$dim
head(met.nc$var[["wind"]]$dim)
attributes(met.nc$var[["wind"]])
dim(met.nc$var[["wind"]])
length(met.nc$var[["wind"]])
dim(met.nc$var["wind"])
length(met.nc$var["wind"])
names(met.nc$var)
names(met.nc$var[["wind"]])
names(met.nc$var[["wind"]]$dim)
class(met.nc$var[["wind"]]$dim)
length(met.nc$var[["wind"]]$dim)
dim(met.nc$var[["wind"]]$dim)
(met.nc$var[["wind"]]$dim)
(met.nc$var[["wind"]]$dim[[1]])
attributes(met.nc$var[["wind"]]$dim)
attributes(met.nc$var[["wind"]])
(met.nc$var[["wind"]]$varsize)
length(met.nc$var[["wind"]]$varsize)
dim.order
met.nc$var$wind$dim
names(met.nc$var$wind$dim)
sapply(met.nc$var$wind$dim, function(x) x$name)
sapply(met.nc$var['wind']$dim, function(x) x$name)
sapply(met.nc$var$['wind']$dim, function(x) x$name)
sapply(met.nc$var[["wind]$dim, function(x) x$name)
"
''''---
sapply(met.nc$var[["wind"]]$dim, function(x) x$name)
var
var <- "wind"
dim.order
var
sapply(met.nc$var[["wind"]]$dim, function(x) x$name)
sapply(met.nc$var[[var]]$dim, function(x) x$name)
dim.order
result
as.data.table(vars)
lati
get.ncvar("wind", lati=176, loni = loni, run.dates = run.dates, met.nc = met.nc)
variables
vars
length(vars)
names(vars)
data.table(vars)
as.data.table(vars)
lapply(vars, class)
variables
is.null(vars)
lapply(is.null(vars))
lapply(vars, is.null)
lapply(vars, class)
sapply(vars, class)
result
names(result)
lat
lon
result <- cruncep_nc2dt(lat, lon, met.nc, start.date, end.date)
head(result)
result <- cruncep_nc2dt(lat, lon, met.nc, start.date, end.date)
result
a <- cruncep_hourly(result, lat)
result
var
names(hourly.result)
dim(result)
length(result$date)
length(result[[var]])
var
a <- cruncep_hourly(result, lat)
names(result)
hist(PAR)
length(PAR)
length(solarMJ)
dim(solarMJ)
result
result <- cruncep_nc2dt(lat, lon, met.nc, start.date, end.date)
length(solarMJ)
#result[,mean(diff(
result
result[,mean(diff(date))]
hours(result[,mean(diff(date))])
as.numeric((result[,mean(diff(date))]))
as.numeric(hours(result[,mean(diff(date))]))
as.numeric((result[,mean(diff(date))]))
as.numeric((result[1:100,mean(diff(date))]))
as.numeric((result[1:10,mean(diff(date))]))
as.numeric((result[1:2,(diff(date)]))
as.numeric((result[1:2,diff(date)]))
as.numeric(result[1:2,diff(date)])
result[1:2,numeric(diff(date))])
result[1:2,numeric(diff(date))]
result[1:2,as.numeric(diff(date))]
result[c(1,8),date]
result[c(1,9),date]
result[c(1,9),diff(date)]
result[c(1,9),numeric(diff(date))]
result[c(1,9),as.numeric(diff(date))]
result[c(1,9),days(diff(date))]
result[c(1,9),as.numeric(days(diff(date)))]
result[c(1,9),hours(diff(date))]
result[c(1,9),diff(date)]
result[c(1,9),diff(date) == days(1)]
days(1)
result[c(1,9),diff(date) - days(1)]
result[c(1,9),as.duration(diff(date))]
result[c(1,9),days(as.duration(diff(date)))]
result[c(1,9),(as.period(diff(date)))]
result[c(1,9),(as.interval(diff(date)))]
result[c(1,9),(as.duration(diff(date)))]
 as.duration(days(1))
dt
hours(dt)
?hours
ymd(dt)
as.duration(dt)
attributes(as.duration(dt))
attributes(dt)
names(dt)
class(dt)
?Duration
help.search("Duration")
as.interval(dt)
?as.duration
as.period(dt)
as.period(dt, units = "hour")
as.period(dt, units = "second")
as.duration(dt, units = "second")
as.duration(dt)
as.period(dt)
as.period(dt, units = "hour")
as.numeric(as.period(dt, units = "hour"))
(as.period(dt, units = "hour"))
help(package = "lubridate")
period(dt)
period(dt, units = "h")
hm(dt)
h(dt)
hour(dt)
class(dt)
as.numeric(as.period(dt, units = "hour"))
as.numeric(as.interval(dt, units = "hour"))
as.numeric(as.duration(dt, units = "hour"))
as.numeric(as.duration(dt))
dt
dt_hr
dt_hr
a <- cruncep_hourly(result, lat)
head(a)
dim(a)
#b <- get.weather(lat, lon, met.nc, start.date, end.date)
getwd()
source("~/dev/pecan/models/biocro/inst/met_functions.R")
b <- get.weather(lat, lon, met.nc, start.date, end.date)
head(b)
Lat
lat
narr2
dim(narr2)
dim(narr)
head(narr)
head(narr2)
debugonce(get.weather)
debugonce(cruncep_hourly)
dt
dt_hr
c
c
c
debugonce(cruncep_hourly)
c
var <- "surface_pressure"
var
names(result)
attributes(met.nc$var)$names
c
debugonce(cruncep_nc2dt)
b <- get.weather(lat, lon, met.nc, start.date, end.date)
c
result
names(result)
met.nc
b <- get.weather(lat, lon, met.nc, start.date, end.date)
b <- get.weather(lat, lon, met.nc, start.date, end.date)
debugonce(cruncep_hourly)
b <- get.weather(lat, lon, met.nc, start.date, end.date)
b <- get.weather(lat, lon, met.nc, start.date, end.date)
c
b <- get.weather(lat, lon, met.nc, start.date, end.date)
get.weather
  result <- cruncep_nc2dt(lat = lat, lon = lon, met.nc = met.nc, start.date, end.date)
  hourly.result <- cruncep_hourly(result, lat = lat)
    weather <- cruncep_dt2weather(hourly.result)
hourly.result
    debugonce(cruncep_dt2weather)
    weather <- cruncep_dt2weather(hourly.result)
weather
str(weather)
c
b <- get.weather(lat, lon, met.nc, start.date, end.date)
b
  result <- cruncep_nc2dt(lat = lat, lon = lon, met.nc = met.nc, start.date, end.date)
result
var
var <- "air_temperature"
b <- get.weather(lat, lon, met.nc, start.date, end.date)
b <- get.weather(lat, lon, met.nc, start.date, end.date)
b
narr2
rh
ebifarm[,range(RH)]
narr[,range(RH)]
narr2[,range(RH)]
cruncep[,range(RH)]
precip
wind
temp
cruncep[,range(RH)]
ebifarm[,range(RH)]
cruncep[,range(Temp)]
cruncep[,range(temp)]
temp
narr2[,range(RH)]
narr2[,range(Temp)]
narr2[,range(DailyTemp.C)]
narr[,range(DailyTemp.C)]
wind
temp
solar
rh
precip
solar
get.weather
  result <- cruncep_nc2dt(lat = lat, lon = lon, met.nc = met.nc, start.date, end.date)
colnames(result)
result[,range(specific_humidity)]
ud.convert(1013.25, "Pa", "mbar")
ud.convert(1013.25, "mbar", "Pa")
result[,range(specific_humidity)]
PEcAn.data.atmosphere::qair2rh
rm(qair2rh)
qair2rh
result[,range(specific_humidity)]
narr2[,range(specific_humidity)]
colnames(narr2)
narr2[,range(RH)]
narr2[,range(qair2rh(RH, DailyTemp.C)]
narr2[,range(qair2rh(RH, DailyTemp.C))]
cruncep_dt2weather
weather[,range(qair2rh(RH, DailyTemp.C))]
hourly.result[,range(qair2rh(qair = specific_humidity, temp = air_temperature))]
narr2[,range(RH)]
narr2
hourly.result[,RH]
hourly.result[,specific_humidity]
narr2[,range(RH)]
q()
n
